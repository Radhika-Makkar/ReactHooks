{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA6CeA,MA1Cf,SAAkBC,GAAQ,IAAD,EACEC,mBAASD,EAAME,KAAKF,EAAME,KAAKC,MAAM,IADvC,mBACdC,EADc,KACRC,EADQ,KAEfC,EAASC,iBAAO,MACtBC,qBAAU,WAEdF,EAASG,QAAQC,WAEb,IAAMC,EAAc,SAAAC,GAEhBP,EAASO,EAAEC,OAAOV,QAatB,OACA,sBAAMW,UAAU,YAAYC,SAZX,SAAAH,GAEjBA,EAAEI,iBACNhB,EAAMe,SAAS,CACXE,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,UACnBC,KAAKjB,IAGTC,EAAS,KAIL,SACKL,EAAME,KAEN,qCAAE,uBAAOoB,KAAK,OAAOC,YAAY,mBAAmBpB,MAAOC,EAC5DoB,KAAK,OAAOV,UAAU,aAAaW,SAAUd,EAC7Ce,IAAKpB,IACL,wBAAQQ,UAAW,mBAAnB,0BACC,qCAAE,uBAAOQ,KAAK,OAAOC,YAAY,aAAapB,MAAOC,EACtDoB,KAAK,OAAOV,UAAU,aAAaW,SAAUd,EAC7Ce,IAAKpB,IACL,wBAAQQ,UAAW,cAAnB,6B,eCSOa,MAvCf,YAA2D,IAA5CC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,aAAaC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,WAAa,EACjC9B,mBAAS,CAC1BgB,GAAG,KACHd,MAAM,KAH4C,mBAC/CD,EAD+C,KAC1C8B,EAD0C,KAetD,OAAG9B,EAAKe,GAEG,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SAXd,SAAAZ,GAEf4B,EAAW7B,EAAKe,GAAGd,GACnB6B,EAAQ,CACJf,GAAG,KACHd,MAAM,QAQPyB,EAAMK,KAAI,SAACC,EAAKC,GAAN,OAEb,sBAAKrB,UAAWoB,EAAKE,WAAY,oBACpC,WADG,UAEA,qBAAmBC,QAAS,kBAC5BR,EAAaK,EAAKjB,KADlB,SAEKiB,EAAKb,MAFAa,EAAKjB,IAKf,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CAAmBuB,QAAS,kBAC5BP,EAAWI,EAAKjB,KAAKH,UAAU,gBAC/B,cAAC,IAAD,CAAQuB,QAAS,kBAAIL,EAAQ,CAACf,GAAGiB,EAAKjB,GAAGd,MAAM+B,EAAKb,QACpDP,UAAU,mBAVAqB,OC4BPG,MApDf,WAAqB,IAAD,EACOrC,mBAAS,IADhB,mBACT2B,EADS,KACHW,EADG,KAwChB,OACI,gCACE,4DACA,cAAC,EAAD,CAAUxB,SAzCF,SAAAmB,GAEV,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAIJ,IAAMoB,EAAS,CAACP,GAAF,mBAAWN,IACzBW,EAASE,OAmCH,cAAC,EAAD,CACAb,MAAOA,EACPC,aAjBc,SAAAZ,GAExB,IAAIyB,EAAad,EAAMK,KAAI,SAAAC,GAK3B,OAJQA,EAAKjB,KAAKA,IAEViB,EAAKE,YAAYF,EAAKE,YAEvBF,KAEPK,EAASG,IASTZ,WAnCkB,SAAAb,GAElB,IAAM0B,EAAU,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAEA,EAAKjB,KAAKA,KAClDsB,EAASI,IAgCeZ,WA5BP,SAACc,EAAOC,GAEjBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAK3CkB,GAAS,SAAAQ,GAAI,OAAEA,EAAKd,KAAI,SAAAe,GAAI,OAAGA,EAAK/B,KAAK4B,EAAOC,EAASE,eCjB9CC,MATf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCDNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.26bb5f45.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react';\r\n\r\n\r\nfunction TodoForm(props) {\r\n    const [input,setInput]=useState(props.edit?props.edit.value:'');\r\n    const inputRef=useRef(null);\r\n    useEffect(()=>\r\n        {\r\ninputRef.current.focus()\r\n        })\r\n    const handleChange= e=>\r\n    {\r\n        setInput(e.target.value);\r\n    };\r\nconst handleSubmit=  e =>\r\n{\r\n    e.preventDefault();\r\nprops.onSubmit({\r\n    id:Math.floor(Math.random()*10000),\r\n    text:input\r\n\r\n});\r\nsetInput('');\r\n};\r\n\r\n    return(\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n        {props.edit ?\r\n        \r\n        (<><input type=\"text\" placeholder=\"Update your item\" value={input}\r\n        name=\"text\" className=\"todo-input\" onChange={handleChange}\r\n        ref={inputRef}/>\r\n        <button className =\"todo-button edit\">Add to do</button></>):\r\n        (<><input type=\"text\" placeholder=\"Add a todo\" value={input}\r\n        name=\"text\" className=\"todo-input\" onChange={handleChange}\r\n        ref={inputRef}/>\r\n        <button className =\"todo-button\">Add to do</button>\r\n        </>\r\n        )}\r\n\r\n    </form>\r\n    );\r\n    \r\n}\r\n\r\nexport default TodoForm\r\n","import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\nfunction Todo({todos,completeTodo,removeTodo,updateTodo}) {\r\n    const [edit,setEdit]=useState({\r\n        id:null,\r\n        value:''\r\n\r\n    });\r\n    const submitUpdate=value=>\r\n    {\r\n        updateTodo(edit.id,value)\r\n        setEdit({\r\n            id:null,\r\n            value:''\r\n\r\n        })\r\n    }\r\n    if(edit.id)\r\n    {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n    return todos.map((todo,index) =>\r\n    (\r\n        <div className={todo.isComplete? 'todo-row complete'\r\n    :'todo-row'} key={index}>\r\n        <div key={todo.id} onClick={()=>\r\n        completeTodo(todo.id)}>\r\n            {todo.text}\r\n            \r\n        </div>\r\n        <div className=\"icons\">\r\n            <RiCloseCircleLine onClick={()=>\r\n            removeTodo(todo.id)} className='delete-icon'/>\r\n            <TiEdit onClick={()=>setEdit({id:todo.id,value:todo.text})}\r\n            className=\"edit-icon\"/>\r\n        </div>\r\n    </div>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n    const [todos,setTodos]=useState([]);\r\n    const addTodo=todo=>\r\n    {\r\n        if(!todo.text || /^\\s*$/.test(todo.text))\r\n    {\r\n        return;\r\n    }\r\n    const newTodos=[todo, ...todos];\r\n    setTodos(newTodos);\r\n  \r\n    };\r\nconst removeTodo= id =>\r\n{\r\nconst removeArr=[...todos].filter(todo=>todo.id!==id)\r\nsetTodos(removeArr);\r\n\r\n};\r\n\r\nconst updateTodo=(todoId,newValue)=>\r\n{\r\n    if(!newValue.text || /^\\s*$/.test(newValue.text))\r\n    {\r\n        return;\r\n    }\r\n  \r\n    setTodos(prev=>prev.map(item=>(item.id===todoId?newValue:item))\r\n    );\r\n}\r\n    const completeTodo= id=>\r\n    {\r\nlet updatedTodos=todos.map(todo=>\r\n    {if(todo.id===id )\r\n    {\r\n        todo.isComplete=!todo.isComplete\r\n    }\r\nreturn todo;\r\n})\r\nsetTodos(updatedTodos);\r\n    }\r\n    return (\r\n        <div>\r\n          <h1>what's the plan for today?</h1> \r\n          <TodoForm onSubmit={addTodo}/> \r\n          <Todo \r\n          todos={todos}\r\n          completeTodo={completeTodo}\r\nremoveTodo={removeTodo} updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}